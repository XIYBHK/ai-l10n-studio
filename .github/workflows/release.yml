name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-22.04, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v6
        with:
          node-version: '20'

      - name: Get npm cache directory
        id: npm-cache-dir
        shell: bash
        run: echo "dir=$(npm config get cache)" >> ${GITHUB_OUTPUT}

      - name: Cache npm dependencies
        uses: actions/cache@v4
        id: npm-cache
        with:
          path: ${{ steps.npm-cache-dir.outputs.dir }}
          key: ${{ runner.os }}-node-20-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-20-
            ${{ runner.os }}-node-

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: 'src-tauri -> target'

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install NSIS (Windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          choco install nsis -y

      - name: Install frontend dependencies
        run: npm ci

      - name: Build Tauri app (Linux - deb only)
        if: matrix.platform == 'ubuntu-22.04'
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY || '' }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD || '' }}
        run: npm run tauri build -- --bundles deb

      - name: Build Tauri app (Windows/macOS)
        if: matrix.platform != 'ubuntu-22.04'
        env:
          TAURI_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY || '' }}
          TAURI_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD || '' }}
        run: npm run tauri build

      - name: Prepare release files (Windows)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          New-Item -ItemType Directory -Force -Path release
          Get-ChildItem -Path src-tauri/target/release/bundle/msi -Filter *.msi | Copy-Item -Destination release/
          Get-ChildItem -Path src-tauri/target/release/bundle/nsis -Filter *.exe | Copy-Item -Destination release/
          Copy-Item src-tauri/target/release/PO-Translator.exe release/PO-Translator-Portable.exe

      - name: Prepare release files (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          mkdir -p release
          cp src-tauri/target/release/bundle/dmg/*.dmg release/ || true
          tar -czf release/po-translator-macos.app.tar.gz -C src-tauri/target/release/bundle/macos . || true

      - name: Prepare release files (Linux)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          mkdir -p release
          cp src-tauri/target/release/bundle/deb/*.deb release/ || true

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          files: release/*
          draft: true
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
